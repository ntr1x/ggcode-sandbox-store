global
  maxconn 1000

defaults
  mode tcp
  timeout client 10s
  timeout connect 5s
  timeout server 10s

frontend stats
  mode http
  bind *:8404
  stats enable
  stats uri /stats
  stats refresh 10s
  stats admin if TRUE

frontend routes
  mode http
  bind *:80

  acl acl_is_options method OPTIONS
  use_backend default_cors if acl_is_options
  
  acl acl__kafka_ui_local_example_com__host hdr(host) -i kafka-ui.local.example.com
  acl acl__kafka_ui_local_example_com__path__1 path /
  acl acl__kafka_ui_local_example_com__path__1 path_beg /
  use_backend kafka_ui_local_example_com__1 if acl__kafka_ui_local_example_com__host acl__kafka_ui_local_example_com__path__1
  
  acl acl__pgadmin_local_example_com__host hdr(host) -i pgadmin.local.example.com
  acl acl__pgadmin_local_example_com__path__1 path /
  acl acl__pgadmin_local_example_com__path__1 path_beg /
  use_backend pgadmin_local_example_com__1 if acl__pgadmin_local_example_com__host acl__pgadmin_local_example_com__path__1
  
  acl acl__swagger_ui_local_example_com__host hdr(host) -i swagger-ui.local.example.com
  acl acl__swagger_ui_local_example_com__path__1 path /
  acl acl__swagger_ui_local_example_com__path__1 path_beg /
  use_backend swagger_ui_local_example_com__1 if acl__swagger_ui_local_example_com__host acl__swagger_ui_local_example_com__path__1
  
  acl acl__auth_local_example_com__host hdr(host) -i auth.local.example.com
  acl acl__auth_local_example_com__redirect__prefix path_beg /auth
  http-request redirect code 301 prefix /auth if acl__auth_local_example_com__host !acl__auth_local_example_com__redirect__prefix
  
  acl acl__auth_local_example_com__path__1 path /
  acl acl__auth_local_example_com__path__1 path_beg /
  use_backend auth_local_example_com__1 if acl__auth_local_example_com__host acl__auth_local_example_com__path__1
  
  acl acl__api__host hdr(host) -i api.local.example.com
  acl acl__api__path__1 path /api/service_catalog
  acl acl__api__path__1 path_beg /api/service_catalog
  use_backend api__1 if acl__api__host acl__api__path__1
  
  acl acl__api__path__2 path /api/service_customers
  acl acl__api__path__2 path_beg /api/service_customers
  use_backend api__2 if acl__api__host acl__api__path__2
  
  acl acl__api__path__3 path /api/service_basket
  acl acl__api__path__3 path_beg /api/service_basket
  use_backend api__3 if acl__api__host acl__api__path__3
  
  acl acl__api__path__4 path /api/service_payments
  acl acl__api__path__4 path_beg /api/service_payments
  use_backend api__4 if acl__api__host acl__api__path__4
  
  acl acl__api__path__5 path /api/service_events
  acl acl__api__path__5 path_beg /api/service_events
  use_backend api__5 if acl__api__host acl__api__path__5
  
backend default_cors
  mode http
  http-after-response set-header Access-Control-Allow-Origin "*"
  http-after-response set-header Access-Control-Allow-Headers "*"
  http-after-response set-header Access-Control-Allow-Credentials "true"
  http-after-response set-header Access-Control-Allow-Methods "GET, DELETE, OPTIONS, POST, PUT, PATCH"
  http-after-response set-header Access-Control-Max-Age "31536000"
  http-request return status 200

backend kafka_ui_local_example_com__1
  mode http
  option httpclose
  option forwardfor if-none
  option forwarded proto host by by_port for
  server s1 env_kafka_ui:8080 check

backend pgadmin_local_example_com__1
  mode http
  option httpclose
  option forwardfor if-none
  option forwarded proto host by by_port for
  server s1 env_pgadmin:80 check

backend swagger_ui_local_example_com__1
  mode http
  option httpclose
  option forwardfor if-none
  option forwarded proto host by by_port for
  server s1 env_swagger_ui:8080 check

backend auth_local_example_com__1
  mode http
  option httpclose
  option forwardfor if-none
  option forwarded proto host by by_port for
  server s1 env_keycloak:8080 check

backend api__1
  mode http
  option httpclose
  option forwardfor if-none
  option forwarded proto host by by_port for
  # START CORS
  http-response add-header Access-Control-Allow-Origin "*"
  http-response add-header Access-Control-Allow-Headers "*"
  http-response add-header Access-Control-Max-Age 3600
  http-after-response set-header Access-Control-Allow-Credentials "true"
  http-response add-header Access-Control-Allow-Methods "GET, DELETE, OPTIONS, POST, PUT, PATCH"
  # END CORS
  server s1 host.docker.internal:8080 check init-addr libc,none

backend api__2
  mode http
  option httpclose
  option forwardfor if-none
  option forwarded proto host by by_port for
  # START CORS
  http-response add-header Access-Control-Allow-Origin "*"
  http-response add-header Access-Control-Allow-Headers "*"
  http-response add-header Access-Control-Max-Age 3600
  http-after-response set-header Access-Control-Allow-Credentials "true"
  http-response add-header Access-Control-Allow-Methods "GET, DELETE, OPTIONS, POST, PUT, PATCH"
  # END CORS
  server s1 host.docker.internal:8081 check init-addr libc,none

backend api__3
  mode http
  option httpclose
  option forwardfor if-none
  option forwarded proto host by by_port for
  # START CORS
  http-response add-header Access-Control-Allow-Origin "*"
  http-response add-header Access-Control-Allow-Headers "*"
  http-response add-header Access-Control-Max-Age 3600
  http-after-response set-header Access-Control-Allow-Credentials "true"
  http-response add-header Access-Control-Allow-Methods "GET, DELETE, OPTIONS, POST, PUT, PATCH"
  # END CORS
  server s1 host.docker.internal:8082 check init-addr libc,none

backend api__4
  mode http
  option httpclose
  option forwardfor if-none
  option forwarded proto host by by_port for
  # START CORS
  http-response add-header Access-Control-Allow-Origin "*"
  http-response add-header Access-Control-Allow-Headers "*"
  http-response add-header Access-Control-Max-Age 3600
  http-after-response set-header Access-Control-Allow-Credentials "true"
  http-response add-header Access-Control-Allow-Methods "GET, DELETE, OPTIONS, POST, PUT, PATCH"
  # END CORS
  server s1 host.docker.internal:8083 check init-addr libc,none

backend api__5
  mode http
  option httpclose
  option forwardfor if-none
  option forwarded proto host by by_port for
  # START CORS
  http-response add-header Access-Control-Allow-Origin "*"
  http-response add-header Access-Control-Allow-Headers "*"
  http-response add-header Access-Control-Max-Age 3600
  http-after-response set-header Access-Control-Allow-Credentials "true"
  http-response add-header Access-Control-Allow-Methods "GET, DELETE, OPTIONS, POST, PUT, PATCH"
  # END CORS
  server s1 host.docker.internal:8084 check init-addr libc,none
